<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>

  <!-- EN:
	<li>r_logentry(p=1)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
	<li>r_logentry(p=0.3)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] with [implement] [deflected_result].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] [deflected_result].</li>
	<li>at-></li>
    <li>at->at</li>
    <li>deflected_result-> [adverb_deflected]</li>
    <li>deflected_result->, [deflected_consequence]</li>
	<li>adverb_deflected->harmlessly</li>
    <li>adverb_deflected->uselessly</li>
    <li>adverb_deflected_opt(p=4)-></li>
    <li>adverb_deflected_opt->[adverb_deflected]</li>
    <li>deflected_consequence->but the [TOOL_label] [scraped_past] off [adverb_deflected_opt]</li>
    <li>deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]</li>
    <li>scraped_past->scraped</li>
    <li>scraped_past->slid</li>
    <li>scraped_present->scraping</li>
    <li>scraped_present->sliding</li>
  -->
  <Combat_Deflect.rulePack.rulesStrings>
	<li>r_logentry(p=1)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] {RECIPIENT_part0_gender ? sul : sulla : sullo} [RECIPIENT_part0_label] [deflected_result].</li>
	<li>r_logentry(p=0.3)->[INITIATOR_definite], brandendo [expertly] {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label], ha [damaged_past] [RECIPIENT_definite] {RECIPIENT_part0_gender ? sul : sulla : sullo} [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha colpito [RECIPIENT_definite] [damaged_ger] con [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha usato [implement] per [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] con [implement] [deflected_result].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] [deflected_result].</li>
    <li>deflected_result-> [adverb_deflected]</li>
    <li>deflected_result-> [deflected_consequence]</li>
	<li>adverb_deflected->innocuamente</li>
    <li>adverb_deflected->inutilmente</li>
    <li>adverb_deflected_opt(p=4)-></li>
    <li>adverb_deflected_opt->[adverb_deflected]</li>
    <li>deflected_consequence->, ma {TOOL_gender ? il : la : lo} [TOOL_label] [scraped_past] [adverb_deflected_opt]</li>
    <li>deflected_consequence->[scraped_present] sulla sua armatura [adverb_deflected_opt]</li>
    <li>scraped_past->ha sfregato</li>	
    <li>scraped_past->ha raschiato</li>
    <li>scraped_present->sfregando</li>
    <li>scraped_present->raschiando</li>
  </Combat_Deflect.rulePack.rulesStrings>
  
  <!-- EN:
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
	<li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <li>scraped_past->ha rimbalzato</li>
    <li>scraped_past->ha graffiato</li>
    <li>scraped_past->ha saltellato</li>
	<li>scraped_present->rimbalzando</li>
    <li>scraped_present->graffiando</li>
    <li>scraped_present->saltellando</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry(p=0.2)->[RECIPIENT_definite] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].</li>    
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] dodged [INITIATOR_definite]'s [damaged_inf].</li>	
    <li>result->but [RECIPIENT_definite] leapt out of the way</li>	
    <li>result->but was deceived by [RECIPIENT_definite]'s feint</li>
    <li>result->but the attack was cleverly avoided</li>
  -->
  <Combat_Dodge.rulePack.rulesStrings>
	<li>r_logentry(p=0.2)->[RECIPIENT_definite] ha schivato evitando che [INITIATOR_definite] {RECIPIENT_gender ? lo : la : lo} riuscisse a [damaged_inf] con [implement].</li>
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] ha schivato evitando che [INITIATOR_definite] {RECIPIENT_gender ? lo : la : lo} riuscisse a [damaged_inf].</li>
    <li>result->ma [RECIPIENT_definite] si è {RECIPIENT_gender ? tolto : tolta : tolto} dai piedi</li>
    <li>result->ma è stato {INITIATOR_gender ? ingannato : ingannata : ingannato} dalla finta di [RECIPIENT_definite]</li>
    <li>result->ma l'attacco è stato astutamente evitato</li>
  </Combat_Dodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[prefix] [injured] [RECIPIENT_definite].</li>
    <li>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [adverb_flavortext].</li>
    <li>r_logentry->[prefix] [adverb_flavortext] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [adverb_flavortext].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] [adverb_flavortext] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
    <li>r_logentry->[RECIPIENT_definite] was [damaged_past] by [INITIATOR_definite].</li>
    <li>r_logentry->[RECIPIENT_definite] was [damaged_past] [adverb_flavortext] by [INITIATOR_definite].</li>
    <li>r_logentry->[RECIPIENT_definite] was [damaged_past].</li>
    <li>r_logentry(p=0.001)->[RECIPIENT_definite] was caught in an explosion.</li>
    <li>r_logentry(p=0.001)->[RECIPIENT_definite] was hit by an explosion.</li>
	<li>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</li>
    <li>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</li>
    <li>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</li>
    <li>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</li>
    <li>prefix->[INITIATOR_definite]'s [blast]</li>
    <li>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label] [blast]</li>
    <li>prefix->[INITIATOR_definite]'s [WEAPON_label] [blast]</li>
    <li>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label]</li>
    <li>prefix->[INITIATOR_definite]'s [WEAPON_label]</li>
    <li>blast->explosion</li>
    <li>blast->blast</li>
    <li>blast->shockwave</li>
    <li>blast->detonation</li>
    <li>blast->discharge</li>
    <li>blast->impact</li>
    <li>fromof->from</li>
    <li>fromof->of</li>
  -->
  <Combat_ExplosionImpact.rulePack.rulesStrings>
    <li>r_logentry->[prefix] [injured] [RECIPIENT_definite].</li>
    <li>r_logentry->[prefix] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry->[prefix] ha [destroyed_past] [adverb_flavortext] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry->[prefix] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite] [adverb_flavortext].</li>
    <li>r_logentry->[prefix] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite] e ha [damaged_past] [damaged_targetsPos].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] ha [damaged_past] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] ha [damaged_past] [adverb_flavortext] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[prefix] ha [damaged_past] [damaged_targets] di [RECIPIENT_definite] [adverb_flavortext].</li>
    <li>r_logentry->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] ha [damaged_past] [adverb_flavortext] [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] ha subito danni.</li>
    <li>r_logentry(p=0.001)->[RECIPIENT_definite] è {RECIPIENT_gender ? rimasto : rimasta : rimasto} {RECIPIENT_gender ? coinvolto : coinvolta : coinvolto} in un'esplosione.</li>
    <li>r_logentry(p=0.001)->[RECIPIENT_definite] è {RECIPIENT_gender ? stato : stata : stato} {RECIPIENT_gender ? colpito : colpita : colpito} da un'esplosione.</li>
	<li>prefix->La [blastSingularFem] [fromof] [WEAPON_projectile_label] di [INITIATOR_definite]</li>
	<li>prefix->L'[blastSingularNeu] [fromof] [WEAPON_projectile_label] di [INITIATOR_definite]</li>
    <li>prefix->La [blastSingularFem] [fromof]{WEAPON_gender ? l : lla : llo} [WEAPON_label] di [INITIATOR_definite]</li>
    <li>prefix->L'[blastSingularNeu] [fromof]{WEAPON_gender ? l : lla : llo} [WEAPON_label] di [INITIATOR_definite]</li>
    <li>prefix->La [blastSingularFem] di [INITIATOR_definite]</li>
    <li>prefix->L'[blastSingularNeu] di [INITIATOR_definite]</li>
    <li>prefix->La [blastSingularFem] del [WEAPON_projectile_label] di [INITIATOR_definite]</li>
    <li>prefix->L'[blastSingularNeu] del [WEAPON_projectile_label] di [INITIATOR_definite]</li>
    <li>prefix->La [blastSingularFem] {WEAPON_gender ? del : della : dello} [WEAPON_label] di [INITIATOR_definite]</li>
    <li>prefix->L'[blastSingularNeu] {WEAPON_gender ? del : della : dello} [WEAPON_label] di [INITIATOR_definite]</li>
    <li>prefix->Il [WEAPON_projectile_label] di [INITIATOR_definite]</li>
    <li>prefix->{WEAPON_gender ? il : la : lo} [WEAPON_label] di [INITIATOR_definite]</li>
    <li>blastSingularNeu->esplosione</li>
    <li>blastSingularFem->deflagrazione</li>
    <li>blastSingularNeu->onda d'urto</li>
    <li>blastSingularFem->detonazione</li>
    <li>blastSingularFem->scarica</li>
    <li>blastSingularNeu->impatto</li>
    <li>fromof->proveniente dal</li>
    <li>fromof->del</li>
  </Combat_ExplosionImpact.rulePack.rulesStrings>
  
  <!-- EN:
	<li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</li>
    <li>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</li>	
    <li>tried->tried</li>
    <li>tried->attempted</li>
    <li>towardsat->towards</li>
    <li>towardsat->at</li>
    <li>verb_genericattack->swung</li>
    <li>verb_genericattack->flailed</li>
    <li>verb_genericattack->thrashed</li>
  -->
  <Combat_FailIncludes.rulePack.rulesStrings>
	<li>action->[INITIATOR_definite] [tried] [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] [damaged_inf] [RECIPIENT_definite] con [implement]</li>
    <li>action->[INITIATOR_definite] [tried] usare [implement] per [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] ha sferrato {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label] contro [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] con [implement] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] con [implement]</li>
    <li>tried->ha provato a</li>
    <li>tried->ha tentato di</li>
    <li>towardsat->verso</li>
    <li>towardsat->su</li>
    <li>verb_genericattack->ha sferrato un colpo</li>
    <li>verb_genericattack->ha tirato un colpo</li>
    <li>verb_genericattack->ha assestato un colpo</li>
  </Combat_FailIncludes.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>    
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [adverb_flavortext].</li>	
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [flavortext_situation].</li>	
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.07)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.03)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [adverb_flavortext] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [expertly].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.6)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</li>
  -->
  <Combat_Hit.rulePack.rulesStrings>
	<li>r_logentry(p=0.3)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] ha [damaged_past] [adverb_flavortext] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label] [flavortext_situation].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.07)->[INITIATOR_definite], brandendo [expertly] {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label], ha [damaged_past] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label].</li>
    <li>r_logentry(p=0.03)->[INITIATOR_definite], brandendo [expertly] {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label], ha [damaged_past] [adverb_flavortext] [RECIPIENT_definite] {recipient_part0_gender ? sul : sulla : sullo} [recipient_part0_label].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha [destroyed_past] [destroyed_suffix] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha [destroyed_past] [expertly] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite] con [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [destroyed_targetsPos]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [damaged_targetsPos]</li>
    <li>result(p=1)->[destroyed_present] [destroyed_targetsPos] e [damaged_present] [damaged_targetsPos]</li>
    <li>action(p=0.3)->[INITIATOR_definite] colpisce [RECIPIENT_definite] riuscendo a [damaged_inf] con [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] usa [implement] per [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite] con [implement]</li>
    <li>action(p=0.6)->[INITIATOR_definite] ha [damaged_past] [RECIPIENT_definite]</li>
  </Combat_Hit.rulePack.rulesStrings>
  
  <!-- EN:
	<li>result(p=0.5)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [adverb_flavortext]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [flavortext_situation]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</li>
	<li>adverb_flavortext->painfully</li>
    <li>adverb_flavortext->brutally</li>
    <li>adverb_flavortext->horribly</li>
    <li>adverb_flavortext->agonizingly</li>
    <li>adverb_flavortext->fiercely</li>
    <li>adverb_flavortext->ruthlessly</li>
    <li>adverb_flavortext->savagely</li>
    <li>adverb_flavortext->viciously</li>
    <li>adverb_flavortext->mercilessly</li>
    <li>adverb_flavortext->heartlessly</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->in an explosion of gore</li>
    <li>flavortext_situation(recipient_flesh==Mechanoid)->in an explosion of scrap</li>
    <li>flavortext_situation->without emotion</li>
    <li>flavortext_situation(p=0.4)->while wearing a blank look</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->while wearing a savage look</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->while wearing a [AdjectiveBadass] look</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->while grimacing</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->while laughing</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->while smirking</li>   
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</li>
    <li>flavortext_consequence->leaving a horrific wound</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</li>
  -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings>
	<li>result(p=0.5)->[damaged_present] [targetlistPos]</li>
    <li>result(p=0.1)->[damaged_present] [adverb_flavortext] [targetlistPos]</li>
    <li>result(p=0.1)->[damaged_present] [targetlistPos] [flavortext_situation]</li>
    <li>result(p=0.1)->[damaged_present] [targetlistPos] e [flavortext_consequence]</li>
	<li>adverb_flavortext->dolorosamente</li>
    <li>adverb_flavortext->brutalmente</li>
    <li>adverb_flavortext->orribilmente</li>
    <li>adverb_flavortext->in maniera straziante</li>
    <li>adverb_flavortext->ferocemente</li>
    <li>adverb_flavortext->spietatamente</li>
    <li>adverb_flavortext->selvaggiamente</li>
    <li>adverb_flavortext->crudelmente</li>
    <li>adverb_flavortext->senza pietà</li>
    <li>adverb_flavortext->in maniera crudele</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->in un'esplosione di sangue</li>
    <li>flavortext_situation(recipient_flesh==Mechanoid)->in un'esplosione di rottami</li>
    <li>flavortext_situation->senza nessuna emozione</li>
    <li>flavortext_situation(p=0.4)->con uno sguardo assente</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->con uno sguardo selvaggio</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->con uno sguardo assente [AdjectiveBadassSingularMas]</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->facendo delle smorfie</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->ridendo</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->sogghignando</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->lasciando una disgustosa ferita</li>
    <li>flavortext_consequence->lasciando una raccapricciante ferita</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->{RECIPIENT_gender ? facendolo : facendola : facendolo} [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->{RECIPIENT_gender ? facendogli : facendole : facendogli} perdere l'equilibrio</li>
  </Combat_MeleeDamageIncludes.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry->[action], [result].</li>
    <li>r_logentry(p=0.2)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=1)->[INITIATOR_possessive] [adjective_bodypart] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>  
    <li>adjective_bodypart->hard</li>
    <li>adjective_bodypart->strong</li>
    <li>adjective_bodypart->powerful</li>
    <li>adjective_bodypart->forceful</li>
    <li>adjective_bodypart->mighty</li>
    <li>adjective_bodypart->rugged</li>
    <li>adjective_bodypart->stout</li>
    <li>adjective_bodypart->sturdy</li>
    <li>adjective_bodypart->solid</li>
    <li>adjective_bodypart->tough</li>
    <li>adjective_bodypart(initiator_flesh==True)->calloused</li>
    <li>adjective_bodypart->firm</li>
    <li>damaged_present(deflected!=True)->wounding</li>
    <li>damaged_present(deflected!=True)->injuring</li>
    <li>destroyed(p=0.5)->destroyed</li>
    <li>destroyed(p=0.5)->demolished</li>
    <li>destroyed(p=0.5)->ruined</li>
    <li>destroyed(p=0.5)->wrecked</li>	
    <li>wince(recipient_flesh==Normal)->wince</li>
    <li>wince(recipient_flesh==Normal)->grimace</li>
    <li>wince(recipient_flesh==Normal)->cringe</li>
    <li>wince(recipient_flesh==Normal)->groan</li>
    <li>wince(recipient_flesh!=Mechanoid)->scream</li>
    <li>wince(recipient_flesh!=Mechanoid)->shout</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</li>
    <li>painevent(recipient_flesh==Normal)->with misery</li>
    <li>painevent->from the injury</li>
    <li>painevent->from the wound</li>
    <li>to->to</li>
    <li>to->into</li>
  -->
  <Combat_MeleeIncludes.rulePack.rulesStrings>
	<li>r_logentry->[action], [result].</li>
    <li>r_logentry(p=0.2)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->{TOOL_gender ? il : la : il} [TOOL_label] {WEAPON_gender ? del : della : del} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->{WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->{TOOL_gender ? un : una : uno} [TOOL_label] {WEAPON_gender ? del : della : dello} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->{WEAPON_gender ? un : una : uno} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->{TOOL_gender ? il : la : il} {TOOL_gender ? proprio : propria : proprio} [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=1)->{TOOL_gender ? il : la : il} {TOOL_gender ? proprio : propria : proprio} {TOOL_gender ? [adjective_bodypartSingularMas] : [adjective_bodypartSingularFem] : [adjective_bodypartSingularMas]} [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->{TOOL_gender ? il : la : il} [TOOL_label] {WEAPON_gender ? del : della : del} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->{WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->{TOOL_gender ? il : la : il} {TOOL_gender ? proprio : propria : proprio} [TOOL_label]</li>
    <li>adjective_bodypartSingularMas->duro</li>
    <li>adjective_bodypartSingularMas->forte</li>
    <li>adjective_bodypartSingularMas->potente</li>
    <li>adjective_bodypartSingularMas->possente</li>
    <li>adjective_bodypartSingularMas->poderoso</li>
    <li>adjective_bodypartSingularMas->massiccio</li>
    <li>adjective_bodypartSingularMas->rude</li>
    <li>adjective_bodypartSingularMas->robusto</li>
    <li>adjective_bodypartSingularMas->solido</li>
    <li>adjective_bodypartSingularMas->resistente</li>
    <li>adjective_bodypartSingularMas->pesante</li>
    <li>adjective_bodypartSingularMas(initiator_flesh==True)->calloso</li>
    <li>adjective_bodypartSingularMas->saldo</li>
    <li>adjective_bodypartSingularFem->dura</li>
    <li>adjective_bodypartSingularFem->forte</li>
    <li>adjective_bodypartSingularFem->potente</li>
    <li>adjective_bodypartSingularFem->possente</li>
    <li>adjective_bodypartSingularFem->poderosa</li>
    <li>adjective_bodypartSingularFem->massiccia</li>
    <li>adjective_bodypartSingularFem->rude</li>
    <li>adjective_bodypartSingularFem->robusta</li>
    <li>adjective_bodypartSingularFem->solida</li>
    <li>adjective_bodypartSingularFem->resistente</li>
    <li>adjective_bodypartSingularFem->pesante</li>
    <li>adjective_bodypartSingularFem(initiator_flesh==True)->callosa</li>
    <li>adjective_bodypartSingularFem->salda</li>
    <li>targetlist(recipient_part_count==1)->{recipient_part_0_gender ? il : la : lo} [recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->{recipient_part_0_gender ? il : la : lo} [recipient_part0_label] e {recipient_part_1_gender ? il : la : lo} [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->{recipient_part_0_gender ? il : la : lo} [recipient_part0_label], {recipient_part_1_gender ? il : la : lo} [recipient_part1_label], e {recipient_part_2_gender ? il : la : lo} [recipient_part2_label]</li>
    <li>targetlist->{recipient_part_0_gender ? il : la : lo} [recipient_part0_label], {recipient_part_1_gender ? il : la : lo} [recipient_part1_label], {recipient_part_2_gender ? il : la : lo} [recipient_part2_label], e {recipient_part_3_gender ? il : la : lo} [recipient_part3_label]</li>
    <li>targetlistPos(recipient_part_count==1)->{recipient_part_0_gender ? il : la : lo} {recipient_part_0_gender ? suo : sua : suo} [recipient_part0_label]</li>
    <li>targetlistPos(recipient_part_count==2)->{recipient_part_0_gender ? il : la : lo} {recipient_part_0_gender ? suo : sua : suo} [recipient_part0_label] e {recipient_part_1_gender ? il : la : lo} {recipient_part_1_gender ? suo : sua : suo} [recipient_part1_label]</li>
    <li>targetlistPos(recipient_part_count==3)->{recipient_part_0_gender ? il : la : lo} {recipient_part_0_gender ? suo : sua : suo} [recipient_part0_label], {recipient_part_1_gender ? il : la : lo} {recipient_part_1_gender ? suo : sua : suo} [recipient_part1_label], e {recipient_part_2_gender ? il : la : lo} {recipient_part_2_gender ? suo : sua : suo} [recipient_part2_label]</li>
    <li>targetlistPos->{recipient_part_0_gender ? il : la : lo} {recipient_part_0_gender ? suo : sua : suo} [recipient_part0_label], {recipient_part_1_gender ? il : la : lo} {recipient_part_1_gender ? suo : sua : suo} [recipient_part1_label], {recipient_part_2_gender ? il : la : lo} {recipient_part_2_gender ? suo : sua : suo} [recipient_part2_label], e {recipient_part_3_gender ? il : la : lo} {recipient_part_3_gender ? suo : sua : suo} [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->ferendo</li>
    <li>damaged_present(deflected!=True)->lesionando</li>
    <li>destroyed(p=0.5)->distrutto</li>
    <li>destroyed(p=0.5)->demolito</li>
    <li>destroyed(p=0.5)->rovinato</li>
    <li>destroyed(p=0.5)->sfasciato</li>	
    <li>wince(recipient_flesh==Normal)->trasalire</li>
    <li>wince(recipient_flesh==Normal)->agitare</li>
    <li>wince(recipient_flesh==Normal)->rabbrividire</li>
    <li>wince(recipient_flesh==Normal)->gemere</li>
    <li>wince(recipient_flesh!=Mechanoid)->urlare</li>
    <li>wince(recipient_flesh!=Mechanoid)->gridare</li>
    <li>wince->indietreggiare</li>
    <li>wince->vacillare</li>
    <li>painstateMas->nel</li>
    <li>painstateMas->a causa del</li>
    <li>painstateMas->per il</li>
    <li>painstateNeu->nell'</li>
    <li>painstateNeu->a causa dell'</li>
    <li>painstateNeu->per l'</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstateMas] dolore</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstateNeu]agonia</li>
    <li>painevent(recipient_flesh==Normal)->con sofferenza</li>
    <li>painevent->per la ferita</li>
    <li>painevent->per il danno</li>	
  </Combat_MeleeIncludes.rulePack.rulesStrings>
  
  <!-- EN:
 	<li>r_logentry(p=0.2)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].</li>   
    <li>r_logentry(p=0.2)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].</li>	
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype].</li>	
    <li>failtype->stumbled</li>
    <li>failtype->tripped</li>
    <li>failtype->flailed</li>
    <li>failtype->floundered</li>
    <li>failtype->missed</li>
    <li>result->but missed</li>
    <li>result->but hit only air</li>
    <li>result->but the swing went wide</li>
    <li>result->but stumbled at the last second</li>
    <li>result(initiator_flesh!=Mechanoid)->but hesitated at the last second</li>
  -->
  <Combat_Miss.rulePack.rulesStrings>
	<li>r_logentry(p=0.2)->[RECIPIENT_definite] ha evitato che {WEAPON_gender ? il : la : lo} [WEAPON_label] di [INITIATOR_definite] {RECIPIENT_gender ? lo : la : lo} riuscisse a [damaged_inf].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha mancato a [damaged_inf] con [implement] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha [failtype] mentre cercava di [damaged_inf] [RECIPIENT_definite] con [implement].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha [failtype] mentre cercava di [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha [failtype].</li>
    <li>failtype->inciampato</li>
    <li>failtype->incespicato</li>
    <li>failtype->vacillato</li>
    <li>failtype->mancato</li>
    <li>result->ma ha mancato</li>
    <li>result->ma colpisce solo l'aria</li>
    <li>result->ma il colpo è andato a vuoto</li>
    <li>result->ma inciampa all'ultimo secondo</li>
    <li>result(initiator_flesh!=Mechanoid)->ma esita all'ultimo secondo</li>
  </Combat_Miss.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [to] [destroyed_suffix].</li>
    <li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [expertly].</li>
    <li>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] by [INITIATOR_definite]'s [WEAPON_projectile_label].</li>
    <li>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] by [INITIATOR_definite]'s [expert] [WEAPON_projectile_label].</li>
    <li>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] into [destroyed_suffix] by [INITIATOR_definite]'s [WEAPON_projectile_label].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [expertly].</li>
    <li>r_logentry(recipient_part_destroyed_count==0,p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
    <li>r_logentry(recipient_part_destroyed_count==0,p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [damaged_present] [RECIPIENT_definite]'s [damaged_targets].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[RECIPIENT_definite]'s [damaged_targets] was [damaged_past] by [INITIATOR_definite]'s [WEAPON_projectile_label].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[RECIPIENT_definite]'s [damaged_targets] was [damaged_past] by [INITIATOR_definite]'s [expert] [WEAPON_projectile_label].</li>
    <li>r_logentry(p=3)->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].</li>
    <li>r_logentry(p=6)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [WEAPON_projectile_label].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite]'s [WEAPON_projectile_label] hit [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite] with a [WEAPON_projectile_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [WEAPON_projectile_label] intended for [ORIGINALTARGET_definite].</li>
    <li>weapon_projectile_label(p=0.05)->shot</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->pierced</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->punctured</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->piercing</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->puncturing</li>
    <li>damaged_past->wounded</li>
    <li>damaged_past->injured</li>
    <li>damaged_past->pierced</li>
    <li>damaged_past->damaged</li>
    <li>damaged_past->shot</li>
    <li>damaged_present->wounding</li>
    <li>damaged_present->injuring</li>
    <li>damaged_present->piercing</li>
    <li>damaged_present->damaging</li>
    <li>damaged_present->shooting</li>
    <li>damaged_suffix->in an ugly fashion</li>
    <li>damaged_suffix(recipient_flesh!=Mechanoid)->with visible blood</li>
    <li>damaged_suffix(recipient_flesh!=Mechanoid)->with the flesh visible</li>
    <li>destroyed_suffix->pieces</li>
    <li>destroyed_suffix->bits</li>
    <li>destroyed_suffix->a fine mist</li>
    <li>destroyed_suffix->fragments</li>
    <li>destroyed_suffix(p=0.5)->a holey mess</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,p=0.2)->ground beef</li>
    <li>to->to</li>
    <li>to->into</li>
    <li>missed->missed</li>
    <li>missed->narrowly missed</li>
  -->
  <Combat_RangedDamage.rulePack.rulesStrings>
	<li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite] [destroyed_suffix].</li>
    <li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [destroyed_past] [expertly] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(p=2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(p=2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite], [destroyed_present] [destroyed_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry->[destroyed_targets] di [RECIPIENT_definite] viene [destroyed_past] dal [WEAPON_projectile_label] di [INITIATOR_definite].</li>
    <li>r_logentry->[destroyed_targets] di [RECIPIENT_definite] viene [destroyed_past] dal [WEAPON_projectile_label] {WEAPON_projectile_gender ? [expertMas] : [expertFem] : [expertMas]} di [INITIATOR_definite].</li>
    <li>r_logentry->[destroyed_targets] di [RECIPIENT_definite] viene [destroyed_past] [destroyed_suffix] dal [WEAPON_projectile_label] di [INITIATOR_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [damaged_past] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [damaged_past] [expertly] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0,p=2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e ha [damaged_past] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0,p=2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite], [damaged_present] [damaged_targets] di [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[damaged_targets] di [RECIPIENT_definite] viene [damaged_past] dal [WEAPON_projectile_label] di [INITIATOR_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count==0)->[damaged_targets] di [RECIPIENT_definite] viene [damaged_past] dal [WEAPON_projectile_label] {WEAPON_projectile_gender ? [expertMas] : [expertFem] : [expertMas]} di [INITIATOR_definite].</li>
    <li>r_logentry(p=3)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [destroyed_past] [destroyed_targets] di [RECIPIENT_definite] e ha [damaged_past] [damaged_targetsPos].</li>
    <li>r_logentry(p=6)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite], [destroyed_present] [destroyed_targets] di [RECIPIENT_definite] e [damaged_present] [damaged_targetsPos].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha colpito [RECIPIENT_definite] con un [WEAPON_projectile_label].</li>
    <li>r_logentry(p=0.2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha colpito [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e ha colpito [RECIPIENT_definite] con un [WEAPON_projectile_label].</li>
    <li>r_logentry(p=0.4)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e ha colpito [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha colpito [RECIPIENT_definite] al posto di [ORIGINALTARGET_definite] con un [WEAPON_projectile_label].</li>
    <li>weapon_projectile_label(p=0.05)->colpo</li>
    <li>destroyed_past->distrutto</li>
    <li>destroyed_past->frantumato</li>
    <li>destroyed_past->eliminato</li>
    <li>destroyed_past->annientato</li>
    <li>destroyed_past->trafitto</li>
    <li>destroyed_past->infilzato</li>
    <li>destroyed_past->perforato</li>
    <li>destroyed_present->distruggendo</li>
    <li>destroyed_present->frantumando</li>
    <li>destroyed_present->eliminando</li>
    <li>destroyed_present->annientando</li>
    <li>destroyed_present->trafiggendo</li>
    <li>destroyed_present->infilzando</li>
    <li>destroyed_present->perforando</li>
    <li>damaged_past->ferito</li>
    <li>damaged_past->lesionato</li>
    <li>damaged_past->trafitto</li>
    <li>damaged_past->danneggiato</li>
    <li>damaged_past->colpito</li>
    <li>damaged_present->ferendo</li>
    <li>damaged_present->lesionando</li>
    <li>damaged_present->trafiggendo</li>
    <li>damaged_present->danneggiando</li>
    <li>damaged_present->colpendo</li>
    <li>damaged_suffix->in un orrendo spettacolo</li>
    <li>damaged_suffix(recipient_flesh!=Mechanoid)->con la vista del sangue</li>
    <li>damaged_suffix(recipient_flesh!=Mechanoid)->con la vista della carne</li>	
    <li>destroyed_suffix->in pezzi</li>
    <li>destroyed_suffix->in mille pezzi</li>
    <li>destroyed_suffix->in una sottile nebbia</li>
    <li>destroyed_suffix->in frammenti</li>
    <li>destroyed_suffix(p=0.5)->con un gran casino</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,p=0.2)->come carne tritata</li>
    <li>missed->mancato</li>
    <li>missed->mancato per poco</li>
  </Combat_RangedDamage.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite][damaged_target] [deflected_result].</li>
    <li>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
    <li>r_logentry->[RECIPIENT_definite][damaged_target_possessive_opt] was [damaged_past] by [INITIATOR_definite]'s [WEAPON_projectile_label] [deflected_result].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] [deflected_result].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite]'s [WEAPON_projectile_label] hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] [deflected_result].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] intended for [ORIGINALTARGET_definite] [deflected_result].</li>
    <li>weapon_projectile_label(p=0.05)->shot</li>
    <li>deflected_result-> [adverb_deflected]</li>
    <li>deflected_result->, [deflected_consequence]</li>
    <li>adverb_deflected->harmlessly</li>
    <li>adverb_deflected->uselessly</li>
    <li>adverb_deflected_opt(p=4)-></li>
    <li>adverb_deflected_opt->[adverb_deflected]</li>    
    <li>deflected_consequence->but it [scraped_past] off [adverb_deflected_opt]</li>
    <li>deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]</li>	
    <li>scraped_past->ricocheted</li>
    <li>scraped_present->ricocheting</li>
    <li>damaged_target_possessive_opt-></li>
    <li>damaged_target_possessive_opt(recipient_part_damaged0_outside==True)->'s [recipient_part_damaged0_label]</li>
    <li>missed->missed</li>
    <li>missed->narrowly missed</li>
  -->
  <Combat_RangedDeflect.rulePack.rulesStrings>
 	<li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [damaged_past] [damaged_target] di [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e ha [damaged_past] [damaged_target_possessive_opt][RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry->[damaged_target_possessive_opt][RECIPIENT_definite] viene [damaged_past] dal [WEAPON_projectile_label] di [INITIATOR_definite] [deflected_result].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha colpito [damaged_target_possessive_opt][RECIPIENT_definite] con un [WEAPON_projectile_label] [deflected_result].</li>
    <li>r_logentry(p=0.2)->Il [WEAPON_projectile_label] di [INITIATOR_definite] colpisce [damaged_target_possessive_opt][RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e colpisce [damaged_target_possessive_opt][RECIPIENT_definite] con un [WEAPON_projectile_label] [deflected_result].</li>
    <li>r_logentry(p=0.4)->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missed] [ORIGINALTARGET_definite] e colpisce [damaged_target_possessive_opt][RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] ha colpito [damaged_target_possessive_opt][RECIPIENT_definite] al posto di [ORIGINALTARGET_definite] con un [WEAPON_projectile_label] [deflected_result].</li>
    <li>weapon_projectile_label(p=0.05)->colpo</li>
    <li>deflected_result-> [adverb_deflected]</li>
    <li>deflected_result->, [deflected_consequence]</li>
    <li>adverb_deflected->innocuamente</li>
    <li>adverb_deflected->inutilmente</li>
    <li>adverb_deflected_opt(p=4)-></li>
    <li>adverb_deflected_opt->[adverb_deflected]</li>	
    <li>deflected_consequence->ma [scraped_past] [adverb_deflected_opt]</li>
    <li>deflected_consequence->[scraped_present] sulla sua armatura [adverb_deflected_opt]</li>
    <li>scraped_past->è rimbalzato</li>
    <li>scraped_present->rimbalza</li>
    <li>damaged_target_possessive_opt-></li>
    <li>damaged_target_possessive_opt(recipient_part_damaged0_outside==True)->{recipient_part_damaged0_gender ? il : la : lo} [recipient_part_damaged0_label] di </li>
    <li>missed->mancato</li>
    <li>missed->mancato per poco</li>
  </Combat_RangedDeflect.rulePack.rulesStrings>
  
  <!-- EN:
 	<li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite] with [INITIATOR_possessive] [WEAPON_label].</li>   
    <li>r_logentry->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label] [burst] at [RECIPIENT_definite].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label].</li>
    <li>shot_a->[adverb_shot] [verb_shot] a</li>
    <li>shot_a(p=2)->[verb_shot] a</li>
    <li>shot(p=2)->[verb_shot]</li>
    <li>shot->[adverb_shot] [verb_shot]</li>
    <li>verb_shot->shot</li>
    <li>verb_shot->fired</li>
    <li>verb_shot->discharged</li>
    <li>shotat->shot [aburst] at</li>
    <li>shotat->[adverb_shot] shot [aburst] at</li>
    <li>shotat(p=0.5)->tried to shoot [aburst] at</li>
    <li>shotat(p=0.3)->took a shot at</li>
    <li>shotat(p=0.2)->took a [adjective_shot] shot at</li>
    <li>shotat->fired [aburst] at</li>
    <li>shotat->fired [aburst] [adverb_shot] at</li>
    <li>shotat(p=0.5)->aimed and fired [aburst] at</li>
    <li>shotat(p=0.3)->opened fire at</li>
    <li>aburst-></li>
    <li>aburst(BURST==True,p=3)->a burst</li>
    <li>burst-></li>
    <li>burst(BURST==True,p=3)->burst</li>	
    <li>adverb_shot->carefully</li>
    <li>adverb_shot->quickly</li>
    <li>adverb_shot->precisely</li>
    <li>adverb_shot->deliberately</li>
    <li>adverb_shot(initiator_flesh!=Mechanoid)->gingerly</li>
    <li>adverb_shot->precisely</li>
    <li>adverb_shot(initiator_flesh!=Mechanoid)->warily</li>
    <li>adjective_shot->careful</li>
    <li>adjective_shot->quick</li>
    <li>adjective_shot->deliberate</li>
    <li>adjective_shot->precise</li>
    <li>adjective_shot(initiator_flesh!=Mechanoid)->wary</li>
  -->
  <Combat_RangedFire.rulePack.rulesStrings>
	<li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite] con {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label].</li>
    <li>r_logentry->[INITIATOR_definite] [shot] {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label] su [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [shot_a] [burst] di [WEAPON_projectile_label] su [RECIPIENT_definite].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot] {WEAPON_gender ? il : la : il} {WEAPON_gender ? proprio : propria : proprio} [WEAPON_label].</li>
    <li>shot_a(p=2)->[verb_shot] con</li>
    <li>shot_a->[verb_shot] [adverb_shot] con</li>
    <li>shot(p=2)->[verb_shot]</li>
    <li>shot->[adverb_shot] [verb_shot]</li>
    <li>verb_shot->ha sparato</li>
    <li>verb_shot->ha fatto fuoco con</li>
    <li>verb_shot->ha scaricato</li>
    <li>shotat->ha sparato [aburst] su</li>
    <li>shotat->ha sparato [adverb_shot] [aburst] su</li>
    <li>shotat(p=0.5)->ha cercato di sparare [aburst] su</li>
    <li>shotat(p=0.3)->ha sparato un colpo su</li>
    <li>shotat(p=0.2)->ha sparato un colpo [adjective_shot] su</li>
    <li>shotat->ha fatto fuoco [aburst] su</li>
    <li>shotat->ha fatto fuoco [adverb_shot] [aburst] su</li>
    <li>shotat(p=0.5)->ha mirato ed ha fatto fuoco [aburst] su</li>
    <li>shotat(p=0.3)->ha aperto il fuoco su</li>
    <li>aburst-></li>
    <li>aburst(BURST==True,p=3)->con una raffica</li>
    <li>burst-></li>
    <li>burst(BURST==True,p=3)->una raffica</li>
    <li>adverb_shot->accuratamente</li>
    <li>adverb_shot->rapidamente</li>
    <li>adverb_shot->con precisione</li>
    <li>adverb_shot->deliberatamente</li>
    <li>adverb_shot(initiator_flesh!=Mechanoid)->cautamente</li>
    <li>adverb_shot(initiator_flesh!=Mechanoid)->prudentemente</li>
    <li>adjective_shot->accurato</li>
    <li>adjective_shot->rapido</li>
    <li>adjective_shot->deliberato</li>
    <li>adjective_shot->preciso</li>
    <li>adjective_shot(initiator_flesh!=Mechanoid)->prudente</li>
  </Combat_RangedFire.rulePack.rulesStrings>
  
  <!-- EN:
	<li>r_logentry->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label] at [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label] at [RECIPIENT_definite].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label].</li>
	<li>threw_a->[adverb_threw] [verb_threw] a</li>
    <li>threw_a(p=2)->[verb_threw] a</li>	
    <li>threw_a->[adverb_threw] [verb_threw] a</li>
    <li>threw_a(p=2)->[verb_threw] a</li>
    <li>threw(p=2)->[verb_threw]</li>
    <li>threw->[adverb_threw] [verb_threw]</li>
    <li>adverb_threw->carefully</li>
    <li>adverb_threw->quickly</li>
    <li>adverb_threw->precisely</li>
    <li>adverb_threw->deliberately</li>
    <li>adverb_threw(initiator_flesh!=Mechanoid)->gingerly</li>
    <li>adverb_threw->precisely</li>
    <li>adverb_threw(initiator_flesh!=Mechanoid)->warily</li>
    <li>adjective_threw->careful</li>
    <li>adjective_threw->quick</li>
    <li>adjective_threw->deliberate</li>
    <li>adjective_threw->precise</li>
    <li>adjective_threw(initiator_flesh!=Mechanoid)->wary</li>
  -->
  <Combat_RangedFire_Thrown.rulePack.rulesStrings>
	<li>r_logentry->[INITIATOR_definite] [threw] il proprio [WEAPON_projectile_label] su [RECIPIENT_definite].</li>
    <li>r_logentry->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label] su [RECIPIENT_definite].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw] il proprio [WEAPON_projectile_label].</li>
    <li>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label].</li>
    <li>threw_a(p=2)->[verb_threw] un</li>
	<li>threw_a->[verb_threw] [adverb_threw] un</li>
    <li>threw(p=2)->[verb_threw]</li>
    <li>threw->[verb_threw] [adverb_threw]</li>
    <li>verb_threw->ha scagliato</li>
    <li>verb_threw->ha tirato</li>
    <li>verb_threw->ha lanciato</li>
    <li>adverb_threw->accuratamente</li>
    <li>adverb_threw->rapidamente</li>
    <li>adverb_threw->con precisione</li>
    <li>adverb_threw->deliberatamente</li>
    <li>adverb_threw(initiator_flesh!=Mechanoid)->cautamente</li>
    <li>adverb_threw(initiator_flesh!=Mechanoid)->prudentemente</li>
    <li>adjective_threw->accurato</li>
    <li>adjective_threw->rapido</li>
    <li>adjective_threw->deliberato</li>
    <li>adjective_threw->preciso</li>
    <li>adjective_threw(initiator_flesh!=Mechanoid)->prudente</li>
  </Combat_RangedFire_Thrown.rulePack.rulesStrings>
  
  <!-- EN:
 	<li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed].</li>   
    <li>r_logentry->[INITIATOR_definite] missed [ORIGINALTARGET_definite].</li>
    <li>r_logentry->[ORIGINALTARGET_definite] [avoidance], [INITIATOR_definite]'s [WEAPON_projectile_label] [missing].</li>	
    <li>missed(p=4)->missed</li>
    <li>missed(p=2)->missed by a small margin</li>
    <li>missed(p=2)->missed by a wide margin</li>
    <li>missed->went wide</li>
    <li>missed->flew into the air</li>
    <li>missed->flew high into the air</li>
    <li>missed->dug into the ground</li>
    <li>missed->skipped off the ground and was lost</li>
    <li>missed->dug a divot out of the ground</li>
    <li>missed(p=0.2)->passed within millimeters of [ORIGINALTARGET_definite]</li>
    <li>missed->passed within centimeters of [ORIGINALTARGET_definite]</li>
    <li>missed->passed within a meter of [ORIGINALTARGET_definite]</li>
    <li>missed->was blown offcourse</li>
    <li>missing->missing</li>
    <li>missing->missing by a small margin</li>
    <li>missing->missing by a wide margin</li>
    <li>missing->going wide</li>
    <li>missing->flying into the air</li>
    <li>missing->flying high into the air</li>
    <li>missing->digging into the ground</li>
    <li>missing->skipping off the ground and becoming lost</li>
    <li>missing->digging a divot out of the ground</li>
    <li>missing(p=0.2)->passing within millimeters of [ORIGINALTARGET_definite]</li>
    <li>missing->passing within centimeters of [ORIGINALTARGET_definite]</li>
    <li>missing->passing within a meter of [ORIGINALTARGET_definite]</li>
    <li>missing->blowing offcourse</li>
    <li>avoidance(ORIGINALTARGET_mobile==True)->jerked aside at the last second</li>
    <li>avoidance(ORIGINALTARGET_mobile==True)->stumbled in an attempt to escape</li>
    <li>avoidance(ORIGINALTARGET_mobile==True)->threw [ORIGINALTARGET_objective]self to the ground</li>
    <li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->ducked behind [COVER_definite]</li>
    <li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->leaped behind [COVER_definite]</li>
  -->
  <Combat_RangedMiss.rulePack.rulesStrings>
	<li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] ha [missedHa].</li>
	<li>r_logentry->Il [WEAPON_projectile_label] di [INITIATOR_definite] è [missedE].</li>
    <li>r_logentry->[INITIATOR_definite] ha mancato [ORIGINALTARGET_definite].</li>
    <li>r_logentry->[ORIGINALTARGET_definite] [avoidance], [missing] il [WEAPON_projectile_label] di [INITIATOR_definite].</li>
    <li>missedHa(p=4)->mancato</li>
    <li>missedHa(p=2)->mancato di poco</li>
    <li>missedHa(p=2)->mancato di molto</li>
    <li>missedE->andato lungo</li>
    <li>missedE->volato nell'aria</li>
    <li>missedE->volato alto nell'aria</li>
    <li>missedE->finito nel terreno</li>
    <li>missedE->rimbalzato sul terreno ed è andato perso</li>
    <li>missedHa->scavato un buco nel terreno</li>
    <li>missedE(p=0.2)->passato a pochi millimetri da [ORIGINALTARGET_definite]</li>
    <li>missedE->passato a pochi centimetri da [ORIGINALTARGET_definite]</li>
    <li>missedE->passato ad un metro da [ORIGINALTARGET_definite]</li>
    <li>missedE->saltato fuori dalla traiettoria</li>
    <li>missing->mancando</li>
    <li>missing->mancando di poco</li>
    <li>missing->mancando di molto</li>
    <li>missing->facendo andare lungo</li>
    <li>missing->facendo volare nell'aria</li>
    <li>missing->facendo volare alto nell'aria</li>
    <li>missing->facendo finire nel terreno</li>
    <li>missing->facendo rimbalzare sul terreno e facendo perdere</li>
    <li>missing->facendo andare fuori traiettoria</li>	
    <li>avoidance(ORIGINALTARGET_mobile==True)->si è {ORIGINALTARGET_gender ? tirato : tirata : tirato} indietro all'ultimo secondo</li>
    <li>avoidance(ORIGINALTARGET_mobile==True)->è {ORIGINALTARGET_gender ? inciampato : inciampata : inciampato} cercando di scappare</li>
    <li>avoidance(ORIGINALTARGET_mobile==True)->si è {ORIGINALTARGET_gender ? gettato : gettata : gettato} a terra</li>
    <li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->si è {ORIGINALTARGET_gender ? nascosto : nascosta : nascosto} dietro [COVER_definite]</li>
    <li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->è {ORIGINALTARGET_gender ? saltato : saltata : saltato} dietro [COVER_definite]</li>
  </Combat_RangedMiss.rulePack.rulesStrings>
  
  <!-- EN:
	<li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]</li>   
	<li>expertly->expertly</li>
    <li>expertly->adeptly</li>
    <li>expertly->adroitly</li>
    <li>expertly->deftly</li>
    <li>expertly->skillfully</li>
    <li>expertly->slickly</li>
    <li>expertly->professionally</li>
    <li>expertly->aptly</li>
    <li>expertly->dexterously</li>
    <li>expertly->cleverly</li>
    <li>expertly->masterfully</li>
    <li>expertly->artistically</li>
    <li>expertly->with skill</li>
    <li>expertly->with impressive experience</li>
    <li>expertly->with flair</li>
    <li>expertly->with care</li>
    <li>expertly->with precision</li>
    <li>expertly->with proficiency</li>
    <li>expertly->with strength</li>
    <li>expertly->with dexterity</li>
    <li>expertly->with mastery</li>
    <li>expertly->with artistry</li>
    <li>expertly->with professionalism</li>
    <li>expertly->like a virtuoso</li>
    <li>expertly->like an expert</li>
    <li>expertly->like a master</li>
    <li>expertly->like an artist</li>
    <li>expertly->like a pro</li>
    <li>expert->expert</li>
    <li>expert->adept</li>
    <li>expert->adroit</li>
    <li>expert->deft</li>
    <li>expert->skillful</li>
    <li>expert->slick</li>
    <li>expert->professional</li>
    <li>expert->apt</li>
    <li>expert->dexterous</li>
    <li>expert->clever</li>
    <li>expert->masterful</li>
    <li>expert->artistic</li>
  -->
  <Combat_WoundIncludes.rulePack.rulesStrings>
	<li>destroyed_targets(recipient_part_destroyed_count==1)->{recipient_part_destroyed0_gender ? il : la : lo} [recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->{recipient_part_destroyed0_gender ? il : la : lo} [recipient_part_destroyed0_label] e {recipient_part_destroyed1_gender ? il : la : lo} [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->{recipient_part_destroyed0_gender ? il : la : lo} [recipient_part_destroyed0_label], {recipient_part_destroyed1_gender ? il : la : lo} [recipient_part_destroyed1_label], e {recipient_part_destroyed2_gender ? il : la : lo} [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->{recipient_part_destroyed0_gender ? il : la : lo} [recipient_part_destroyed0_label], {recipient_part_destroyed1_gender ? il : la : lo} [recipient_part_destroyed1_label], {recipient_part_destroyed2_gender ? il : la : lo} [recipient_part_destroyed2_label], e {recipient_part_destroyed3_gender ? il : la : lo} [recipient_part_destroyed3_label]</li>
	<li>destroyed_targetsPos(recipient_part_destroyed_count==1)->{recipient_part_destroyed0_gender ? il : la : lo} {recipient_part_destroyed0_gender ? suo : sua : suo} [recipient_part_destroyed0_label]</li>
    <li>destroyed_targetsPos(recipient_part_destroyed_count==2)->{recipient_part_destroyed0_gender ? il : la : lo} {recipient_part_destroyed0_gender ? suo : sua : suo} [recipient_part_destroyed0_label] e {recipient_part_destroyed1_gender ? il : la : lo} {recipient_part_destroyed1_gender ? suo : sua : suo} [recipient_part_destroyed1_label]</li>
    <li>destroyed_targetsPos(recipient_part_destroyed_count==3)->{recipient_part_destroyed0_gender ? il : la : lo} {recipient_part_destroyed0_gender ? suo : sua : suo} [recipient_part_destroyed0_label], {recipient_part_destroyed1_gender ? il : la : lo} {recipient_part_destroyed1_gender ? suo : sua : suo} [recipient_part_destroyed1_label], e {recipient_part_destroyed2_gender ? il : la : lo} {recipient_part_destroyed2_gender ? suo : sua : suo} [recipient_part_destroyed2_label]</li>
    <li>destroyed_targetsPos->{recipient_part_destroyed0_gender ? il : la : lo} {recipient_part_destroyed0_gender ? suo : sua : suo} [recipient_part_destroyed0_label], {recipient_part_destroyed1_gender ? il : la : lo} {recipient_part_destroyed1_gender ? suo : sua : suo} [recipient_part_destroyed1_label], {recipient_part_destroyed2_gender ? il : la : lo} {recipient_part_destroyed2_gender ? suo : sua : suo} [recipient_part_destroyed2_label], e {recipient_part_destroyed3_gender ? il : la : lo} {recipient_part_destroyed3_gender ? suo : sua : suo} [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->{recipient_part_damaged0_gender ? il : la : lo} [recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->{recipient_part_damaged0_gender ? il : la : lo} [recipient_part_damaged0_label] e {recipient_part_damaged1_gender ? il : la : lo} [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->{recipient_part_damaged0_gender ? il : la : lo} [recipient_part_damaged0_label], {recipient_part_damaged1_gender ? il : la : lo} [recipient_part_damaged1_label], e {recipient_part_damaged2_gender ? il : la : lo} [recipient_part_damaged2_label]</li>
    <li>damaged_targets->{recipient_part_damaged0_gender ? il : la : lo} [recipient_part_damaged0_label], {recipient_part_damaged1_gender ? il : la : lo} [recipient_part_damaged1_label], {recipient_part_damaged2_gender ? il : la : lo} [recipient_part_damaged2_label], e {recipient_part_damaged3_gender ? il : la : lo} [recipient_part_damaged3_label]</li>
    <li>damaged_targetsPos(recipient_part_damaged_count==1)->{recipient_part_damaged0_gender ? il : la : il} {recipient_part_damaged0_gender ? suo : sua : suo} [recipient_part_damaged0_label]</li>
    <li>damaged_targetsPos(recipient_part_damaged_count==2)->{recipient_part_damaged0_gender ? il : la : il} {recipient_part_damaged0_gender ? suo : sua : suo} [recipient_part_damaged0_label] e {recipient_part_damaged1_gender ? il : la : il} {recipient_part_damaged1_gender ? suo : sua : suo} [recipient_part_damaged1_label]</li>
    <li>damaged_targetsPos(recipient_part_damaged_count==3)->{recipient_part_damaged0_gender ? il : la : il} {recipient_part_damaged0_gender ? suo : sua : suo} [recipient_part_damaged0_label], {recipient_part_damaged1_gender ? il : la : il} {recipient_part_damaged1_gender ? suo : sua : suo} [recipient_part_damaged1_label], e {recipient_part_damaged2_gender ? il : la : il} {recipient_part_damaged2_gender ? suo : sua : suo} [recipient_part_damaged2_label]</li>
    <li>damaged_targetsPos->{recipient_part_damaged0_gender ? il : la : il} {recipient_part_damaged0_gender ? suo : sua : suo} [recipient_part_damaged0_label], {recipient_part_damaged1_gender ? il : la : il} {recipient_part_damaged1_gender ? suo : sua : suo} [recipient_part_damaged1_label], {recipient_part_damaged2_gender ? il : la : il} {recipient_part_damaged2_gender ? suo : sua : suo} [recipient_part_damaged2_label], e {recipient_part_damaged3_gender ? il : la : il} {recipient_part_damaged3_gender ? suo : sua : suo} [recipient_part_damaged3_label]</li>   
	<li>expertly->abilmente</li>
    <li>expertly->espertamente</li>
    <li>expertly->magistralmente</li>
    <li>expertly->sapientemente</li>
    <li>expertly->destramente</li>
    <li>expertly->eccellentemente</li>
    <li>expertly->professionalmente</li>
    <li>expertly->appropriatamente</li>
    <li>expertly->agilmente</li>
    <li>expertly->brillantemente</li>
    <li>expertly->perfettamente</li>
    <li>expertly->artisticamente</li>
    <li>expertly->con competenza</li>
    <li>expertly->con straordinaria esperienza</li>
    <li>expertly->con talento</li>
    <li>expertly->con cura</li>
    <li>expertly->con precisione</li>
    <li>expertly->con abilità</li>
    <li>expertly->con forza</li>
    <li>expertly->con destrezza</li>
    <li>expertly->con maestria</li>
    <li>expertly->con bravura</li>
    <li>expertly->con professionalità</li>
    <li>expertly->come un genio</li>
    <li>expertly->come un esperto</li>
    <li>expertly->come un maestro</li>
    <li>expertly->come un artista</li>
    <li>expertly->come un professionista</li>
    <li>expertMas->esperto</li>
    <li>expertMas->abile</li>
    <li>expertMas->accorto</li>
    <li>expertMas->sapiente</li>
    <li>expertMas->scaltro</li>
    <li>expertMas->professionale</li>
    <li>expertMas->capace</li>
    <li>expertMas->agile</li>
    <li>expertMas->geniale</li>
    <li>expertMas->magistrale</li>
    <li>expertMas->artistico</li>
    <li>expertFem->esperta</li>
    <li>expertFem->abile</li>
    <li>expertFem->accorta</li>
    <li>expertFem->sapiente</li>
    <li>expertFem->scaltra</li>
    <li>expertFem->professionale</li>
    <li>expertFem->capace</li>
    <li>expertFem->agile</li>
    <li>expertFem->geniale</li>
    <li>expertFem->magistrale</li>
    <li>expertFem->artistica</li>
  </Combat_WoundIncludes.rulePack.rulesStrings>
  
</LanguageData>