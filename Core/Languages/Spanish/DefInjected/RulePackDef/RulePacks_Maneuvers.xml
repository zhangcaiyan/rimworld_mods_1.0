<?xml version="1.0" encoding="utf-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->devoured</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_past->ravaged</li>
    <li>destroyed_present->devouring</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->ripping</li>
    <li>destroyed_present->ravaging</li>
    <li>destroyed_suffix->[to] shreds</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->morder</li>
    <li>damaged_inf->masticar</li>
    <li>damaged_inf(p=0.5)->dentellear</li>
    <li>damaged_past->mordido</li>
    <li>damaged_past->masticado</li>
    <li>damaged_past->dentelleado</li>
    <li>damaged_past->roido</li>
    <li>damaged_past(deflected!=True)->rasgado</li>
    <li>damaged_present->muerde</li>
    <li>damaged_present->mastica</li>
    <li>damaged_present->dentellea</li>
    <li>damaged_present->pica</li>
    <li>damaged_present(deflected!=True)->degarrar</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exponiendo la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exponiendo la maquinaria debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando desgarros espantosos en la piel</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->dejando desgarros espantosos en el metal</li>
    <li>destroyed_past->devorado</li>
    <li>destroyed_past->apartado</li>
    <li>destroyed_past->arrancado</li>
    <li>destroyed_past->devastado</li>
    <li>destroyed_present->devora</li>
    <li>destroyed_present->separa</li>
    <li>destroyed_present->arranca</li>
    <li>destroyed_present->devasta</li>
    <li>destroyed_suffix->[to] pizcas</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] un lío irreconocible</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] en [RECIPIENT_definite] a su vista, pero [RECIPIENT_definite] lo esquivó de cualquier manera.</li>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] en [RECIPIENT_definite] a su vista, pero [RECIPIENT_definite] lo bloqueó.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] golpeado [TOOL_label] delante de ojos [RECIPIENT_definite] .</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] pateado por una lluvia de [TOOL_label] a la vista de [RECIPIENT_definite].</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] a la vista de [RECIPIENT_definite], pero se perdió.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->empujar</li>
    <li>damaged_inf(p=2)->codear</li>
    <li>damaged_inf->pellizcar</li>
    <li>damaged_inf->empujar</li>
    <li>damaged_inf->clavar</li>
    <li>damaged_past(p=2)->empujado</li>
    <li>damaged_past(p=2)->codeado</li>
    <li>damaged_past->pellizcado</li>
    <li>damaged_past->empujado</li>
    <li>damaged_past->codeado</li>
    <li>damaged_present(p=2)->empuja</li>
    <li>damaged_present(p=2)->codea</li>
    <li>damaged_present->pellizca</li>
    <li>damaged_present->empuja</li>
    <li>damaged_present->codea</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un moretón enorme</li>
    <li>flavortext_consequence->dejando el área visiblemente deformada</li>
    <li>flavortext_consequence->golpea [RECIPIENT_objective] fuera de sí</li>
    <li>flavortext_consequence->golpea [RECIPIENT_objective] a los lados</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->aplastado</li>
    <li>destroyed_past->borrado</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->roto</li>
    <li>destroyed_present->aplasta</li>
    <li>destroyed_present->abruma</li>
    <li>destroyed_present->borra</li>
    <li>destroyed_present->aniquila</li>
    <li>destroyed_present->rompe</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedacitos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</li>
    <li>flavortext_situation->with fluids dripping from the [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->abierta</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con sangre goteando desde la [woundname]</li>
    <li>flavortext_situation->con fluidos que gotean de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y expone la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->y exponer la maquinaria debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y deja una sangriento [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] piezas desordenadas</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] fragmentos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una pila de sangre</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->arañar</li>
    <li>damaged_inf(deflected!=True)->lacerar</li>
    <li>damaged_inf(deflected!=True)->rasgar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_past(p=4)->arañado</li>
    <li>damaged_past(deflected!=True)->lacerado</li>
    <li>damaged_past(deflected!=True)->rasgado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_present->rasca</li>
    <li>damaged_present(deflected!=True)->lacera</li>
    <li>damaged_present(deflected!=True)->desgarra</li>
    <li>damaged_present->corta</li>
    <li>destroyed_past->mutilado</li>
    <li>destroyed_past->lacerado</li>
    <li>destroyed_past->arrancado</li>
    <li>destroyed_past->triturado</li>
    <li>destroyed_past->despedazado</li>
    <li>destroyed_present->magulla</li>
    <li>destroyed_present->lacera</li>
    <li>destroyed_present->arranca</li>
    <li>destroyed_present->tritura</li>
    <li>destroyed_present->desgarra</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->slash</li>
    <li>damaged_inf->cut</li>
    <li>damaged_inf->chop</li>
    <li>damaged_inf->hack</li>
    <li>damaged_inf->slice</li>
    <li>damaged_inf(deflected!=True)->gash</li>
    <li>damaged_past(p=4)->slashed</li>
    <li>damaged_past->cut</li>
    <li>damaged_past->chopped</li>
    <li>damaged_past->hacked</li>
    <li>damaged_past->sliced</li>
    <li>damaged_past(deflected!=True)->gashed</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</li>
    <li>flavortext_situation->with fluids dripping from the [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</li>
    <li>destroyed_past->bisected</li>
    <li>destroyed_past->divided</li>
    <li>destroyed_past->halved</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->split</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->into neat pieces</li>
    <li>destroyed_suffix->cleanly</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</li>
  -->
  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->cortar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_inf->tajar</li>
    <li>damaged_inf->rajar</li>
    <li>damaged_inf->rebanar</li>
    <li>damaged_inf(deflected!=True)->tajo</li>
    <li>damaged_past(p=4)->acuchillado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_past->tajado</li>
    <li>damaged_past->rajado</li>
    <li>damaged_past->rebanado</li>
    <li>damaged_past(deflected!=True)->recortado</li>
    <li>damaged_present->acuchilla</li>
    <li>damaged_present->corta</li>
    <li>damaged_present->rebana</li>
    <li>damaged_present(deflected!=True)->recorta</li>
    <li>damaged_present(deflected!=True)->desgarra</li>
    <li>damaged_present(deflected!=True)->lacera</li>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->abertura</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con sangre goteando de la [woundname]</li>
    <li>flavortext_situation->con fluidos que goteando de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exponiendo la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exponiendo los mecanismos debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrienta [woundname]</li>
    <li>destroyed_past->fileteado</li>
    <li>destroyed_past->dividido</li>
    <li>destroyed_past->cortado a la mitad</li>
    <li>destroyed_past->separado</li>
    <li>destroyed_past->grieta</li>
    <li>destroyed_present->filetea</li>
    <li>destroyed_present->dividide</li>
    <li>destroyed_present->corta a la mitad</li>
    <li>destroyed_present->separa</li>
    <li>destroyed_present->agrieta</li>
    <li>destroyed_suffix->en piezas ordenadas</li>
    <li>destroyed_suffix->limpiamente</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exponiendo su funcionamiento interno</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->cortandolo en dos</li>
  </Maneuver_Slash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Smash.rulePack.rulesStrings>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un moretón enorme</li>
    <li>flavortext_consequence->dejando el área visiblemente deformado</li>
    <li>flavortext_consequence->golpeando [RECIPIENT_objective] fuera de balance</li>
    <li>flavortext_consequence->golpeando [RECIPIENT_objective] por el lado</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedacitos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Smash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->clobber</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_past(p=4)->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->clobbered</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present->clobbering</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->aplastar</li>
    <li>damaged_inf->golpetazo</li>
    <li>damaged_inf->batir</li>
    <li>damaged_inf->golpear</li>
    <li>damaged_inf->atacar</li>
    <li>damaged_past(p=4)->aplastado</li>
    <li>damaged_past->golpeado</li>
    <li>damaged_past->aporreado</li>
    <li>damaged_past->azotado</li>
    <li>damaged_past->atacado</li>
    <li>damaged_present->impone</li>
    <li>damaged_present->da un castañazo</li>
    <li>damaged_present->paliza</li>
    <li>damaged_present(deflected!=True)->hematoma</li>
    <li>damaged_present(deflected!=True)->lacerante</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->aplastado</li>
    <li>destroyed_past->borrado</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->rompiendo</li>
    <li>destroyed_present->aplasta</li>
    <li>destroyed_present->abruma</li>
    <li>destroyed_present->borrado</li>
    <li>destroyed_present->aniquila</li>
    <li>destroyed_present->quebranta</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->stab</li>
    <li>damaged_inf->jab</li>
    <li>damaged_inf(deflected!=True)->pierce</li>
    <li>damaged_inf(deflected!=True)->puncture</li>
    <li>damaged_inf(deflected!=True)->skewer</li>
    <li>damaged_past(p=4)->stabbed</li>
    <li>damaged_past->jabbed</li>
    <li>damaged_past(deflected!=True)->pierced</li>
    <li>damaged_past(deflected!=True)->punctured</li>
    <li>damaged_past(deflected!=True)->skewered</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->hole</li>
    <li>woundname->wound</li>
    <li>woundname->crevice</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</li>
    <li>destroyed_past->impaled</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->skewered</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->straight through</li>
    <li>destroyed_suffix->leaving a clean hole</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</li>
  -->
  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->apuñalar</li>
    <li>damaged_inf->pinchar</li>
    <li>damaged_inf(deflected!=True)->atravesar</li>
    <li>damaged_inf(deflected!=True)->punciónar</li>
    <li>damaged_inf(deflected!=True)->brochetar</li>
    <li>damaged_past(p=4)->apuñalado</li>
    <li>damaged_past->pinchado</li>
    <li>damaged_past(deflected!=True)->perforado</li>
    <li>damaged_past(deflected!=True)->pinchado</li>
    <li>damaged_past(deflected!=True)->ensartado</li>
    <li>damaged_present(deflected!=True)->perfora</li>
    <li>damaged_present(deflected!=True)->perfora</li>
    <li>damaged_present(deflected!=True)->penetra</li>
    <li>damaged_present(deflected!=True)->ensarta</li>
    <li>woundname->agujero</li>
    <li>woundname->herida</li>
    <li>woundname->hendidura</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrante [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un rasguño [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un sangrado [woundname]</li>
    <li>destroyed_past->empalado</li>
    <li>destroyed_past->perforado</li>
    <li>destroyed_past->ensartado</li>
    <li>destroyed_present->empala</li>
    <li>destroyed_present->perfora</li>
    <li>destroyed_present->ensarta</li>
    <li>destroyed_suffix->atravesó directo</li>
    <li>destroyed_suffix->dejando un agujero limpio</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->dejándolo goteando fluidos sangrientos</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->dejándolo con fluidos irreconocibles</li>
  </Maneuver_Stab.rulePack.rulesStrings>
  
</LanguageData>